{"version":3,"sources":["components/navbar.js","components/cover.js","components/image.js","components/container.js","index.js"],"names":["NavBar","score","topScore","message","className","href","Cover","ImageCard","backgroundColor","selectedPic","onImageClick","onClick","src","alt","Container","colors","pic","Colors","map","color","index","key","App","props","state","info","this","setState","_","shuffle","currentScore","currentTopScore","name","delay","indexOf","push","topScoreUpdater","length","shufflePic","checkForDuplicate","handleSelectPic","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f72b2fd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NavBar = ({ score, topScore, message }) => {\r\n\treturn (\r\n\t\t<div className='navbar-fixed'>\r\n\t\t\t<nav>\r\n\t\t\t\t<div className='nav-wrapper row black center-align flow-text'>\r\n\t\t\t\t\t<div className='col s4'>\r\n\t\t\t\t\t\t<a href='/'><b>Ravensburger Puzzle Game</b></a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='col s4'>\r\n\t\t\t\t\t\t<span>{message}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='col s4'>\r\n\t\t\t\t\t\t<span>Score: {score} | Top Score: {topScore}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nconst Cover = () => {\r\n\treturn (\t\t\t\r\n\t\t<div className='container'>\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<h2 className='header col s12 center'>Only click the picture one time!</h2>\r\n\t\t\t</div>\r\n\t\t</div>\t\r\n\t);\r\n};\r\n\r\nexport default Cover;","import React from 'react';\r\n\r\nconst ImageCard = ({ backgroundColor, selectedPic, onImageClick }) => {\r\n\treturn (\r\n\t\t<div className='col s3'>\r\n\t\t\t<div className={`card hoverable ${backgroundColor} `} onClick={() => { onImageClick(selectedPic) }}>\r\n\t\t\t\t<div className='card-image'>\r\n\t\t\t\t\t<img src={`assets/img/${selectedPic}.jpg`} alt='Pictures' />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ImageCard;","import React from 'react';\r\nimport ImageCards from './image';\r\n\r\nconst Container = ({ colors, pic, onImageClick }) => {\r\n\tconst Colors = colors.map((color, index) => {\r\n\t\treturn (\r\n\t\t\t<ImageCards\r\n\t\t\t\tkey={color}\r\n\t\t\t\tbackgroundColor={color}\r\n\t\t\t\tselectedPic={pic[index]}\r\n\t\t\t\tonImageClick={onImageClick}\r\n\t\t\t/>\r\n\t\t)\r\n\t})\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<div className='row flow-text'>\r\n\t\t\t\t{Colors}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Container;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport _ from 'lodash';\r\n\r\nimport NavBar from './components/navbar';\r\nimport Cover from './components/cover';\r\nimport Container from './components/container';\r\n\r\n\r\nconst pic = ['puzzle-pop-art', 'puzzle-antique-doorknobs', 'puzzle-awsome-a', 'puzzle-bizzare-bookshop-2', 'puzzle-christmas-in-the-square', 'puzzle-collector-cupboard', 'puzzle-craft-cupboard', 'puzzle-doors-of-the-world', 'puzzle-gardener-cupboard', 'puzzle-greatest-show-on-earth', 'puzzle-honefleur-reflection', 'puzzle-kitchen-cupboard', 'puzzle-locker-room', 'puzzle-merlin-laboratory', 'puzzle-new-york', 'puzzle-when-pigs-fly'];\r\n\r\nconst colors = ['black', 'white', 'black', 'white', 'black', 'white', 'black', 'white', 'black', 'white', 'black', 'white', 'black', 'white', 'black', 'white'];\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tinfo: 'Click an image to begin!',\r\n\t\t\tscore: 0,\r\n\t\t\ttopScore: 0,\r\n\t\t\tpic: pic,\r\n\t\t\tselectedPic: []\r\n\t\t};\r\n\t};\r\n\r\n\tshufflePic() {\r\n\t\tthis.setState({ pic: _.shuffle(pic) });\r\n\t};\r\n\r\n\ttopScoreUpdater(currentScore, currentTopScore, name) {\r\n\t\tcurrentScore++;\r\n\t\t_.delay(() => {\r\n\t\t\tthis.setState({ info: 'Choose your next picture!' });\r\n\t\t}, 500);\r\n\t\tif (currentScore >= currentTopScore) {\r\n\t\t\treturn this.setState({ score: currentScore, topScore: currentScore, info: `Correct!` });\r\n\t\t};\r\n\t\treturn this.setState({ score: currentScore, info: `Correct!` });\r\n\t};\r\n\r\n\tcheckForDuplicate(name) {\r\n\t\tif (this.state.selectedPic.indexOf(name) === -1) {\r\n\t\t\tthis.state.selectedPic.push(name);\r\n\t\t\tthis.topScoreUpdater(this.state.score, this.state.topScore, name);\r\n\t\t\tif (this.state.selectedPic.length === pic.length) {\r\n\t\t\t\tthis.setState({ selectedPic: [] });\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\t_.delay(() => {\r\n\t\t\t\tthis.setState({ info: 'You Lose!' });\r\n\t\t\t}, 500);\r\n\t\t\tthis.setState({ score: 0, selectedPic: [], info: `Wrong!` });\r\n\t\t}\r\n\t\tthis.shufflePic();\r\n\t};\r\n\r\n\thandleSelectPic(name) {\r\n\t\tthis.checkForDuplicate(name);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<NavBar\r\n\t\t\t\t\tscore={this.state.score}\r\n\t\t\t\t\ttopScore={this.state.topScore}\r\n\t\t\t\t\tmessage={this.state.info}\r\n\t\t\t\t/>\r\n\t\t\t\t<Cover />\r\n\t\t\t\t<div className=\"row\"></div>\r\n\t\t\t\t<Container\r\n\t\t\t\t\tcolors={colors}\r\n\t\t\t\t\tpic={this.state.pic}\r\n\t\t\t\t\tonImageClick={name => { this.handleSelectPic(name) }}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}